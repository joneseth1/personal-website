{"ast":null,"code":"import { BufferGeometry, FileLoader, Float32BufferAttribute, Group, LineBasicMaterial, LineSegments, Loader, Material, Mesh, MeshPhongMaterial, Points, PointsMaterial, Vector3, Color } from 'three'; // o object_name | g group_name\n\nconst _object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\nconst _material_library_pattern = /^mtllib /; // usemtl material_name\n\nconst _material_use_pattern = /^usemtl /; // usemap map_name\n\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\n\nconst _vB = new Vector3();\n\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\n\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n  const state = {\n    objects: [],\n    object: {},\n    vertices: [],\n    normals: [],\n    colors: [],\n    uvs: [],\n    materials: {},\n    materialLibraries: [],\n    startObject: function (name, fromDeclaration) {\n      // If the current object (initial from reset) is not from a g/o declaration in the parsed\n      // file. We need to use it for the first parsed g/o to keep things in sync.\n      if (this.object && this.object.fromDeclaration === false) {\n        this.object.name = name;\n        this.object.fromDeclaration = fromDeclaration !== false;\n        return;\n      }\n\n      const previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n\n      this.object = {\n        name: name || '',\n        fromDeclaration: fromDeclaration !== false,\n        geometry: {\n          vertices: [],\n          normals: [],\n          colors: [],\n          uvs: [],\n          hasUVIndices: false\n        },\n        materials: [],\n        smooth: true,\n        startMaterial: function (name, libraries) {\n          const previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n          // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n          if (previous && (previous.inherited || previous.groupCount <= 0)) {\n            this.materials.splice(previous.index, 1);\n          }\n\n          const material = {\n            index: this.materials.length,\n            name: name || '',\n            mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n            smooth: previous !== undefined ? previous.smooth : this.smooth,\n            groupStart: previous !== undefined ? previous.groupEnd : 0,\n            groupEnd: -1,\n            groupCount: -1,\n            inherited: false,\n            clone: function (index) {\n              const cloned = {\n                index: typeof index === 'number' ? index : this.index,\n                name: this.name,\n                mtllib: this.mtllib,\n                smooth: this.smooth,\n                groupStart: 0,\n                groupEnd: -1,\n                groupCount: -1,\n                inherited: false\n              };\n              cloned.clone = this.clone.bind(cloned);\n              return cloned;\n            }\n          };\n          this.materials.push(material);\n          return material;\n        },\n        currentMaterial: function () {\n          if (this.materials.length > 0) {\n            return this.materials[this.materials.length - 1];\n          }\n\n          return undefined;\n        },\n        _finalize: function (end) {\n          const lastMultiMaterial = this.currentMaterial();\n\n          if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n            lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n            lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n            lastMultiMaterial.inherited = false;\n          } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n          if (end && this.materials.length > 1) {\n            for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n              if (this.materials[mi].groupCount <= 0) {\n                this.materials.splice(mi, 1);\n              }\n            }\n          } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n          if (end && this.materials.length === 0) {\n            this.materials.push({\n              name: '',\n              smooth: this.smooth\n            });\n          }\n\n          return lastMultiMaterial;\n        }\n      }; // Inherit previous objects material.\n      // Spec tells us that a declared material must be set to all objects until a new material is declared.\n      // If a usemtl declaration is encountered while this new object is being parsed, it will\n      // overwrite the inherited material. Exception being that there was already face declarations\n      // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n      if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n        const declared = previousMaterial.clone(0);\n        declared.inherited = true;\n        this.object.materials.push(declared);\n      }\n\n      this.objects.push(this.object);\n    },\n    finalize: function () {\n      if (this.object && typeof this.object._finalize === 'function') {\n        this.object._finalize(true);\n      }\n    },\n    parseVertexIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseNormalIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 3) * 3;\n    },\n    parseUVIndex: function (value, len) {\n      const index = parseInt(value, 10);\n      return (index >= 0 ? index - 1 : index + len / 2) * 2;\n    },\n    addVertex: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addVertexPoint: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addVertexLine: function (a) {\n      const src = this.vertices;\n      const dst = this.object.geometry.vertices;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n    },\n    addNormal: function (a, b, c) {\n      const src = this.normals;\n      const dst = this.object.geometry.normals;\n      dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addFaceNormal: function (a, b, c) {\n      const src = this.vertices;\n      const dst = this.object.geometry.normals;\n\n      _vA.fromArray(src, a);\n\n      _vB.fromArray(src, b);\n\n      _vC.fromArray(src, c);\n\n      _cb.subVectors(_vC, _vB);\n\n      _ab.subVectors(_vA, _vB);\n\n      _cb.cross(_ab);\n\n      _cb.normalize();\n\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n      dst.push(_cb.x, _cb.y, _cb.z);\n    },\n    addColor: function (a, b, c) {\n      const src = this.colors;\n      const dst = this.object.geometry.colors;\n      if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n      if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n    },\n    addUV: function (a, b, c) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n      dst.push(src[b + 0], src[b + 1]);\n      dst.push(src[c + 0], src[c + 1]);\n    },\n    addDefaultUV: function () {\n      const dst = this.object.geometry.uvs;\n      dst.push(0, 0);\n      dst.push(0, 0);\n      dst.push(0, 0);\n    },\n    addUVLine: function (a) {\n      const src = this.uvs;\n      const dst = this.object.geometry.uvs;\n      dst.push(src[a + 0], src[a + 1]);\n    },\n    addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n      const vLen = this.vertices.length;\n      let ia = this.parseVertexIndex(a, vLen);\n      let ib = this.parseVertexIndex(b, vLen);\n      let ic = this.parseVertexIndex(c, vLen);\n      this.addVertex(ia, ib, ic);\n      this.addColor(ia, ib, ic); // normals\n\n      if (na !== undefined && na !== '') {\n        const nLen = this.normals.length;\n        ia = this.parseNormalIndex(na, nLen);\n        ib = this.parseNormalIndex(nb, nLen);\n        ic = this.parseNormalIndex(nc, nLen);\n        this.addNormal(ia, ib, ic);\n      } else {\n        this.addFaceNormal(ia, ib, ic);\n      } // uvs\n\n\n      if (ua !== undefined && ua !== '') {\n        const uvLen = this.uvs.length;\n        ia = this.parseUVIndex(ua, uvLen);\n        ib = this.parseUVIndex(ub, uvLen);\n        ic = this.parseUVIndex(uc, uvLen);\n        this.addUV(ia, ib, ic);\n        this.object.geometry.hasUVIndices = true;\n      } else {\n        // add placeholder values (for inconsistent face definitions)\n        this.addDefaultUV();\n      }\n    },\n    addPointGeometry: function (vertices) {\n      this.object.geometry.type = 'Points';\n      const vLen = this.vertices.length;\n\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        const index = this.parseVertexIndex(vertices[vi], vLen);\n        this.addVertexPoint(index);\n        this.addColor(index);\n      }\n    },\n    addLineGeometry: function (vertices, uvs) {\n      this.object.geometry.type = 'Line';\n      const vLen = this.vertices.length;\n      const uvLen = this.uvs.length;\n\n      for (let vi = 0, l = vertices.length; vi < l; vi++) {\n        this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n      }\n\n      for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n        this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n      }\n    }\n  };\n  state.startObject('', false);\n  return state;\n} //\n\n\nclass OBJLoader extends Loader {\n  constructor(manager) {\n    super(manager);\n    this.materials = null;\n  }\n\n  load(url, onLoad, onProgress, onError) {\n    const scope = this;\n    const loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setRequestHeader(this.requestHeader);\n    loader.setWithCredentials(this.withCredentials);\n    loader.load(url, function (text) {\n      try {\n        onLoad(scope.parse(text));\n      } catch (e) {\n        if (onError) {\n          onError(e);\n        } else {\n          console.error(e);\n        }\n\n        scope.manager.itemError(url);\n      }\n    }, onProgress, onError);\n  }\n\n  setMaterials(materials) {\n    this.materials = materials;\n    return this;\n  }\n\n  parse(text) {\n    const state = new ParserState();\n\n    if (text.indexOf('\\r\\n') !== -1) {\n      // This is faster than String.split with regex that splits on both\n      text = text.replace(/\\r\\n/g, '\\n');\n    }\n\n    if (text.indexOf('\\\\\\n') !== -1) {\n      // join lines separated by a line continuation character (\\)\n      text = text.replace(/\\\\\\n/g, '');\n    }\n\n    const lines = text.split('\\n');\n    let result = [];\n\n    for (let i = 0, l = lines.length; i < l; i++) {\n      const line = lines[i].trimStart();\n      if (line.length === 0) continue;\n      const lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n      if (lineFirstChar === '#') continue;\n\n      if (lineFirstChar === 'v') {\n        const data = line.split(_face_vertex_data_separator_pattern);\n\n        switch (data[0]) {\n          case 'v':\n            state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n            if (data.length >= 7) {\n              _color.setRGB(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6])).convertSRGBToLinear();\n\n              state.colors.push(_color.r, _color.g, _color.b);\n            } else {\n              // if no colors are defined, add placeholders so color and vertex indices match\n              state.colors.push(undefined, undefined, undefined);\n            }\n\n            break;\n\n          case 'vn':\n            state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n            break;\n\n          case 'vt':\n            state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n            break;\n        }\n      } else if (lineFirstChar === 'f') {\n        const lineData = line.slice(1).trim();\n        const vertexData = lineData.split(_face_vertex_data_separator_pattern);\n        const faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n        for (let j = 0, jl = vertexData.length; j < jl; j++) {\n          const vertex = vertexData[j];\n\n          if (vertex.length > 0) {\n            const vertexParts = vertex.split('/');\n            faceVertices.push(vertexParts);\n          }\n        } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n        const v1 = faceVertices[0];\n\n        for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n          const v2 = faceVertices[j];\n          const v3 = faceVertices[j + 1];\n          state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n        }\n      } else if (lineFirstChar === 'l') {\n        const lineParts = line.substring(1).trim().split(' ');\n        let lineVertices = [];\n        const lineUVs = [];\n\n        if (line.indexOf('/') === -1) {\n          lineVertices = lineParts;\n        } else {\n          for (let li = 0, llen = lineParts.length; li < llen; li++) {\n            const parts = lineParts[li].split('/');\n            if (parts[0] !== '') lineVertices.push(parts[0]);\n            if (parts[1] !== '') lineUVs.push(parts[1]);\n          }\n        }\n\n        state.addLineGeometry(lineVertices, lineUVs);\n      } else if (lineFirstChar === 'p') {\n        const lineData = line.slice(1).trim();\n        const pointData = lineData.split(' ');\n        state.addPointGeometry(pointData);\n      } else if ((result = _object_pattern.exec(line)) !== null) {\n        // o object_name\n        // or\n        // g group_name\n        // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n        // let name = result[ 0 ].slice( 1 ).trim();\n        const name = (' ' + result[0].slice(1).trim()).slice(1);\n        state.startObject(name);\n      } else if (_material_use_pattern.test(line)) {\n        // material\n        state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n      } else if (_material_library_pattern.test(line)) {\n        // mtl file\n        state.materialLibraries.push(line.substring(7).trim());\n      } else if (_map_use_pattern.test(line)) {\n        // the line is parsed but ignored since the loader assumes textures are defined MTL files\n        // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n        console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n      } else if (lineFirstChar === 's') {\n        result = line.split(' '); // smooth shading\n        // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n        // but does not define a usemtl for each face set.\n        // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n        // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n        // where explicit usemtl defines geometry groups.\n        // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n        /*\n        \t * http://paulbourke.net/dataformats/obj/\n        \t *\n        \t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n        \t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n        \t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n        \t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n        \t * than 0.\"\n        \t */\n\n        if (result.length > 1) {\n          const value = result[1].trim().toLowerCase();\n          state.object.smooth = value !== '0' && value !== 'off';\n        } else {\n          // ZBrush can produce \"s\" lines #11707\n          state.object.smooth = true;\n        }\n\n        const material = state.object.currentMaterial();\n        if (material) material.smooth = state.object.smooth;\n      } else {\n        // Handle null terminated files without exception\n        if (line === '\\0') continue;\n        console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n      }\n    }\n\n    state.finalize();\n    const container = new Group();\n    container.materialLibraries = [].concat(state.materialLibraries);\n    const hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n\n    if (hasPrimitives === true) {\n      for (let i = 0, l = state.objects.length; i < l; i++) {\n        const object = state.objects[i];\n        const geometry = object.geometry;\n        const materials = object.materials;\n        const isLine = geometry.type === 'Line';\n        const isPoints = geometry.type === 'Points';\n        let hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n        if (geometry.vertices.length === 0) continue;\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n        }\n\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n        }\n\n        if (geometry.hasUVIndices === true) {\n          buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n        } // Create materials\n\n\n        const createdMaterials = [];\n\n        for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          const sourceMaterial = materials[mi];\n          const materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n          let material = state.materials[materialHash];\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n            if (isLine && material && !(material instanceof LineBasicMaterial)) {\n              const materialLine = new LineBasicMaterial();\n              Material.prototype.copy.call(materialLine, material);\n              materialLine.color.copy(material.color);\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n              const materialPoints = new PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              Material.prototype.copy.call(materialPoints, material);\n              materialPoints.color.copy(material.color);\n              materialPoints.map = material.map;\n              material = materialPoints;\n            }\n          }\n\n          if (material === undefined) {\n            if (isLine) {\n              material = new LineBasicMaterial();\n            } else if (isPoints) {\n              material = new PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n              material = new MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n            material.flatShading = sourceMaterial.smooth ? false : true;\n            material.vertexColors = hasVertexColors;\n            state.materials[materialHash] = material;\n          }\n\n          createdMaterials.push(material);\n        } // Create mesh\n\n\n        let mesh;\n\n        if (createdMaterials.length > 1) {\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            const sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n    } else {\n      // if there is only the default parser state object with no geometry data, interpret data as point cloud\n      if (state.vertices.length > 0) {\n        const material = new PointsMaterial({\n          size: 1,\n          sizeAttenuation: false\n        });\n        const buffergeometry = new BufferGeometry();\n        buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n\n        if (state.colors.length > 0 && state.colors[0] !== undefined) {\n          buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n          material.vertexColors = true;\n        }\n\n        const points = new Points(buffergeometry, material);\n        container.add(points);\n      }\n    }\n\n    return container;\n  }\n\n}\n\nexport { OBJLoader };","map":{"version":3,"names":["BufferGeometry","FileLoader","Float32BufferAttribute","Group","LineBasicMaterial","LineSegments","Loader","Material","Mesh","MeshPhongMaterial","Points","PointsMaterial","Vector3","Color","_object_pattern","_material_library_pattern","_material_use_pattern","_map_use_pattern","_face_vertex_data_separator_pattern","_vA","_vB","_vC","_ab","_cb","_color","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","OBJLoader","constructor","manager","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","result","i","line","trimStart","lineFirstChar","charAt","data","parseFloat","setRGB","convertSRGBToLinear","r","g","lineData","slice","trim","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","create","materialLine","prototype","copy","call","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["C:/programs/portfolio/app/node_modules/three/examples/jsm/loaders/OBJLoader.js"],"sourcesContent":["import {\n\tBufferGeometry,\n\tFileLoader,\n\tFloat32BufferAttribute,\n\tGroup,\n\tLineBasicMaterial,\n\tLineSegments,\n\tLoader,\n\tMaterial,\n\tMesh,\n\tMeshPhongMaterial,\n\tPoints,\n\tPointsMaterial,\n\tVector3,\n\tColor\n} from 'three';\n\n// o object_name | g group_name\nconst _object_pattern = /^[og]\\s*(.+)?/;\n// mtllib file_reference\nconst _material_library_pattern = /^mtllib /;\n// usemtl material_name\nconst _material_use_pattern = /^usemtl /;\n// usemap map_name\nconst _map_use_pattern = /^usemap /;\nconst _face_vertex_data_separator_pattern = /\\s+/;\n\nconst _vA = new Vector3();\nconst _vB = new Vector3();\nconst _vC = new Vector3();\n\nconst _ab = new Vector3();\nconst _cb = new Vector3();\n\nconst _color = new Color();\n\nfunction ParserState() {\n\n\tconst state = {\n\t\tobjects: [],\n\t\tobject: {},\n\n\t\tvertices: [],\n\t\tnormals: [],\n\t\tcolors: [],\n\t\tuvs: [],\n\n\t\tmaterials: {},\n\t\tmaterialLibraries: [],\n\n\t\tstartObject: function ( name, fromDeclaration ) {\n\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\n\n\t\t\t\tthis.object.name = name;\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t\tthis.object = {\n\t\t\t\tname: name || '',\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\n\n\t\t\t\tgeometry: {\n\t\t\t\t\tvertices: [],\n\t\t\t\t\tnormals: [],\n\t\t\t\t\tcolors: [],\n\t\t\t\t\tuvs: [],\n\t\t\t\t\thasUVIndices: false\n\t\t\t\t},\n\t\t\t\tmaterials: [],\n\t\t\t\tsmooth: true,\n\n\t\t\t\tstartMaterial: function ( name, libraries ) {\n\n\t\t\t\t\tconst previous = this._finalize( false );\n\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\n\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tconst material = {\n\t\t\t\t\t\tindex: this.materials.length,\n\t\t\t\t\t\tname: name || '',\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\n\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\tinherited: false,\n\n\t\t\t\t\t\tclone: function ( index ) {\n\n\t\t\t\t\t\t\tconst cloned = {\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\n\t\t\t\t\t\t\t\tname: this.name,\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\n\t\t\t\t\t\t\t\tgroupStart: 0,\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\n\t\t\t\t\t\t\t\tgroupCount: - 1,\n\t\t\t\t\t\t\t\tinherited: false\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\n\t\t\t\t\t\t\treturn cloned;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\n\t\t\t\t\tthis.materials.push( material );\n\n\t\t\t\t\treturn material;\n\n\t\t\t\t},\n\n\t\t\t\tcurrentMaterial: function () {\n\n\t\t\t\t\tif ( this.materials.length > 0 ) {\n\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn undefined;\n\n\t\t\t\t},\n\n\t\t\t\t_finalize: function ( end ) {\n\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\n\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\n\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\n\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\n\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\n\n\t\t\t\t\t\tthis.materials.push( {\n\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\tsmooth: this.smooth\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn lastMultiMaterial;\n\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// Inherit previous objects material.\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\n\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\n\t\t\t\tdeclared.inherited = true;\n\t\t\t\tthis.object.materials.push( declared );\n\n\t\t\t}\n\n\t\t\tthis.objects.push( this.object );\n\n\t\t},\n\n\t\tfinalize: function () {\n\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\n\n\t\t\t\tthis.object._finalize( true );\n\n\t\t\t}\n\n\t\t},\n\n\t\tparseVertexIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseNormalIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\n\n\t\t},\n\n\t\tparseUVIndex: function ( value, len ) {\n\n\t\t\tconst index = parseInt( value, 10 );\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\n\n\t\t},\n\n\t\taddVertex: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddVertexPoint: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddVertexLine: function ( a ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.vertices;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\n\t\t},\n\n\t\taddNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.normals;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddFaceNormal: function ( a, b, c ) {\n\n\t\t\tconst src = this.vertices;\n\t\t\tconst dst = this.object.geometry.normals;\n\n\t\t\t_vA.fromArray( src, a );\n\t\t\t_vB.fromArray( src, b );\n\t\t\t_vC.fromArray( src, c );\n\n\t\t\t_cb.subVectors( _vC, _vB );\n\t\t\t_ab.subVectors( _vA, _vB );\n\t\t\t_cb.cross( _ab );\n\n\t\t\t_cb.normalize();\n\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\n\n\t\t},\n\n\t\taddColor: function ( a, b, c ) {\n\n\t\t\tconst src = this.colors;\n\t\t\tconst dst = this.object.geometry.colors;\n\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\n\n\t\t},\n\n\t\taddUV: function ( a, b, c ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\n\n\t\t},\n\n\t\taddDefaultUV: function () {\n\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\t\t\tdst.push( 0, 0 );\n\n\t\t},\n\n\t\taddUVLine: function ( a ) {\n\n\t\t\tconst src = this.uvs;\n\t\t\tconst dst = this.object.geometry.uvs;\n\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\n\n\t\t},\n\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\n\n\t\t\tthis.addVertex( ia, ib, ic );\n\t\t\tthis.addColor( ia, ib, ic );\n\n\t\t\t// normals\n\n\t\t\tif ( na !== undefined && na !== '' ) {\n\n\t\t\t\tconst nLen = this.normals.length;\n\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\n\n\t\t\t\tthis.addNormal( ia, ib, ic );\n\n\t\t\t} else {\n\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tif ( ua !== undefined && ua !== '' ) {\n\n\t\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\n\n\t\t\t\tthis.addUV( ia, ib, ic );\n\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\n\n\t\t\t} else {\n\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\n\n\t\t\t\tthis.addDefaultUV();\n\n\t\t\t}\n\n\t\t},\n\n\t\taddPointGeometry: function ( vertices ) {\n\n\t\t\tthis.object.geometry.type = 'Points';\n\n\t\t\tconst vLen = this.vertices.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\n\n\t\t\t\tthis.addVertexPoint( index );\n\t\t\t\tthis.addColor( index );\n\n\t\t\t}\n\n\t\t},\n\n\t\taddLineGeometry: function ( vertices, uvs ) {\n\n\t\t\tthis.object.geometry.type = 'Line';\n\n\t\t\tconst vLen = this.vertices.length;\n\t\t\tconst uvLen = this.uvs.length;\n\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\n\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\n\n\t\t\t}\n\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\n\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tstate.startObject( '', false );\n\n\treturn state;\n\n}\n\n//\n\nclass OBJLoader extends Loader {\n\n\tconstructor( manager ) {\n\n\t\tsuper( manager );\n\n\t\tthis.materials = null;\n\n\t}\n\n\tload( url, onLoad, onProgress, onError ) {\n\n\t\tconst scope = this;\n\n\t\tconst loader = new FileLoader( this.manager );\n\t\tloader.setPath( this.path );\n\t\tloader.setRequestHeader( this.requestHeader );\n\t\tloader.setWithCredentials( this.withCredentials );\n\t\tloader.load( url, function ( text ) {\n\n\t\t\ttry {\n\n\t\t\t\tonLoad( scope.parse( text ) );\n\n\t\t\t} catch ( e ) {\n\n\t\t\t\tif ( onError ) {\n\n\t\t\t\t\tonError( e );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.error( e );\n\n\t\t\t\t}\n\n\t\t\t\tscope.manager.itemError( url );\n\n\t\t\t}\n\n\t\t}, onProgress, onError );\n\n\t}\n\n\tsetMaterials( materials ) {\n\n\t\tthis.materials = materials;\n\n\t\treturn this;\n\n\t}\n\n\tparse( text ) {\n\n\t\tconst state = new ParserState();\n\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\n\n\t\t\t// This is faster than String.split with regex that splits on both\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\n\n\t\t}\n\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\n\n\t\t\t// join lines separated by a line continuation character (\\)\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\n\n\t\t}\n\n\t\tconst lines = text.split( '\\n' );\n\t\tlet result = [];\n\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\n\n\t\t\tconst line = lines[ i ].trimStart();\n\n\t\t\tif ( line.length === 0 ) continue;\n\n\t\t\tconst lineFirstChar = line.charAt( 0 );\n\n\t\t\t// @todo invoke passed in handler if any\n\t\t\tif ( lineFirstChar === '#' ) continue;\n\n\t\t\tif ( lineFirstChar === 'v' ) {\n\n\t\t\t\tconst data = line.split( _face_vertex_data_separator_pattern );\n\n\t\t\t\tswitch ( data[ 0 ] ) {\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tstate.vertices.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( data.length >= 7 ) {\n\n\t\t\t\t\t\t\t_color.setRGB(\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\n\t\t\t\t\t\t\t).convertSRGBToLinear();\n\n\t\t\t\t\t\t\tstate.colors.push( _color.r, _color.g, _color.b );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\n\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vn':\n\t\t\t\t\t\tstate.normals.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 'vt':\n\t\t\t\t\t\tstate.uvs.push(\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'f' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst vertexData = lineData.split( _face_vertex_data_separator_pattern );\n\t\t\t\tconst faceVertices = [];\n\n\t\t\t\t// Parse the face vertex data into an easy to work with format\n\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\n\n\t\t\t\t\tconst vertex = vertexData[ j ];\n\n\t\t\t\t\tif ( vertex.length > 0 ) {\n\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\t\t\t\tconst v1 = faceVertices[ 0 ];\n\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\n\n\t\t\t\t\tconst v2 = faceVertices[ j ];\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\n\n\t\t\t\t\tstate.addFace(\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t} else if ( lineFirstChar === 'l' ) {\n\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\n\t\t\t\tlet lineVertices = [];\n\t\t\t\tconst lineUVs = [];\n\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\n\n\t\t\t\t\tlineVertices = lineParts;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\n\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\n\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\n\n\t\t\t} else if ( lineFirstChar === 'p' ) {\n\n\t\t\t\tconst lineData = line.slice( 1 ).trim();\n\t\t\t\tconst pointData = lineData.split( ' ' );\n\n\t\t\t\tstate.addPointGeometry( pointData );\n\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\n\n\t\t\t\t// o object_name\n\t\t\t\t// or\n\t\t\t\t// g group_name\n\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n\t\t\t\t// let name = result[ 0 ].slice( 1 ).trim();\n\t\t\t\tconst name = ( ' ' + result[ 0 ].slice( 1 ).trim() ).slice( 1 );\n\n\t\t\t\tstate.startObject( name );\n\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\n\n\t\t\t\t// material\n\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\n\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\n\n\t\t\t\t// mtl file\n\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\n\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\n\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\n\n\t\t\t} else if ( lineFirstChar === 's' ) {\n\n\t\t\t\tresult = line.split( ' ' );\n\n\t\t\t\t// smooth shading\n\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n\t\t\t\t// but does not define a usemtl for each face set.\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n\t\t\t\t// where explicit usemtl defines geometry groups.\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n\t\t\t\tif ( result.length > 1 ) {\n\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\n\t\t\t\t\tstate.object.smooth = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst material = state.object.currentMaterial();\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\n\n\t\t\t} else {\n\n\t\t\t\t// Handle null terminated files without exception\n\t\t\t\tif ( line === '\\0' ) continue;\n\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\n\n\t\t\t}\n\n\t\t}\n\n\t\tstate.finalize();\n\n\t\tconst container = new Group();\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\n\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\n\n\t\tif ( hasPrimitives === true ) {\n\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\n\n\t\t\t\tconst object = state.objects[ i ];\n\t\t\t\tconst geometry = object.geometry;\n\t\t\t\tconst materials = object.materials;\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\n\t\t\t\tlet hasVertexColors = false;\n\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\n\n\t\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\t\thasVertexColors = true;\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// Create materials\n\n\t\t\t\tconst createdMaterials = [];\n\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n\t\t\t\t\tlet material = state.materials[ materialHash ];\n\n\t\t\t\t\tif ( this.materials !== null ) {\n\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\n\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\n\t\t\t\t\t\t\tmaterial = materialLine;\n\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\n\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\n\t\t\t\t\t\t\tmaterial = materialPoints;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( material === undefined ) {\n\n\t\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\n\n\t\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\n\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcreatedMaterials.push( material );\n\n\t\t\t\t}\n\n\t\t\t\t// Create mesh\n\n\t\t\t\tlet mesh;\n\n\t\t\t\tif ( createdMaterials.length > 1 ) {\n\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\n\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( isLine ) {\n\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else if ( isPoints ) {\n\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmesh.name = object.name;\n\n\t\t\t\tcontainer.add( mesh );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\n\n\t\t\tif ( state.vertices.length > 0 ) {\n\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\n\n\t\t\t\tconst buffergeometry = new BufferGeometry();\n\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\n\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\n\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\n\t\t\t\t\tmaterial.vertexColors = true;\n\n\t\t\t\t}\n\n\t\t\t\tconst points = new Points( buffergeometry, material );\n\t\t\t\tcontainer.add( points );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn container;\n\n\t}\n\n}\n\nexport { OBJLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}