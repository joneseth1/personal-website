{"ast":null,"code":"import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\nconst Context = /*#__PURE__*/React.createContext({});\n\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\n\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\n\nconst GizmoHelper = _ref => {\n  let {\n    alignment = 'bottom-right',\n    margin = [80, 80],\n    renderPriority = 0,\n    autoClear = true,\n    onUpdate,\n    onTarget,\n    children: GizmoHelperComponent\n  } = _ref;\n  const size = useThree(_ref2 => {\n    let {\n      size\n    } = _ref2;\n    return size;\n  });\n  const mainCamera = useThree(_ref3 => {\n    let {\n      camera\n    } = _ref3;\n    return camera;\n  }); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(_ref4 => {\n    let {\n      controls\n    } = _ref4;\n    return controls;\n  });\n  const gl = useThree(_ref5 => {\n    let {\n      gl\n    } = _ref5;\n    return gl;\n  });\n  const scene = useThree(_ref6 => {\n    let {\n      scene\n    } = _ref6;\n    return scene;\n  });\n  const invalidate = useThree(_ref7 => {\n    let {\n      invalidate\n    } = _ref7;\n    return invalidate;\n  });\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    defaultUp.current.copy(mainCamera.up);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) scene.background = backgroundRef.current;\n    };\n  }, []);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current; // Animate step\n\n\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n          mainCamera.up.copy(defaultUp.current);\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\n\n      if (autoClear) gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const raycast = useCamera(virtualCam);\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera,\n    raycast\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };","map":{"version":3,"names":["React","useThree","useFrame","createPortal","Object3D","Matrix4","Quaternion","Vector3","Scene","OrthographicCamera","useCamera","Context","createContext","useGizmoContext","useContext","turnRate","Math","PI","dummy","matrix","q1","q2","target","targetPosition","GizmoHelper","alignment","margin","renderPriority","autoClear","onUpdate","onTarget","children","GizmoHelperComponent","size","mainCamera","camera","defaultControls","controls","gl","scene","invalidate","backgroundRef","useRef","gizmoRef","virtualCam","virtualScene","useState","animating","radius","focusPoint","defaultUp","tweenCamera","useCallback","direction","current","position","distanceTo","copy","quaternion","multiplyScalar","add","lookAt","up","useEffect","background","_","delta","_gizmoRef$current","angleTo","step","rotateTowards","set","applyQuaternion","normalize","update","invert","setFromRotationMatrix","clearDepth","render","raycast","gizmoHelperContext","useMemo","marginX","marginY","x","endsWith","width","y","startsWith","height","createElement","Provider","value","ref"],"sources":["C:/programs/portfolio/app/node_modules/@react-three/drei/core/GizmoHelper.js"],"sourcesContent":["import * as React from 'react';\nimport { useThree, useFrame, createPortal } from '@react-three/fiber';\nimport { Object3D, Matrix4, Quaternion, Vector3, Scene } from 'three';\nimport { OrthographicCamera } from './OrthographicCamera.js';\nimport { useCamera } from './useCamera.js';\n\nconst Context = /*#__PURE__*/React.createContext({});\nconst useGizmoContext = () => {\n  return React.useContext(Context);\n};\nconst turnRate = 2 * Math.PI; // turn rate in angles per second\n\nconst dummy = new Object3D();\nconst matrix = new Matrix4();\nconst [q1, q2] = [new Quaternion(), new Quaternion()];\nconst target = new Vector3();\nconst targetPosition = new Vector3();\nconst GizmoHelper = ({\n  alignment = 'bottom-right',\n  margin = [80, 80],\n  renderPriority = 0,\n  autoClear = true,\n  onUpdate,\n  onTarget,\n  children: GizmoHelperComponent\n}) => {\n  const size = useThree(({\n    size\n  }) => size);\n  const mainCamera = useThree(({\n    camera\n  }) => camera); // @ts-expect-error new in @react-three/fiber@7.0.5\n\n  const defaultControls = useThree(({\n    controls\n  }) => controls);\n  const gl = useThree(({\n    gl\n  }) => gl);\n  const scene = useThree(({\n    scene\n  }) => scene);\n  const invalidate = useThree(({\n    invalidate\n  }) => invalidate);\n  const backgroundRef = React.useRef();\n  const gizmoRef = React.useRef();\n  const virtualCam = React.useRef(null);\n  const [virtualScene] = React.useState(() => new Scene());\n  const animating = React.useRef(false);\n  const radius = React.useRef(0);\n  const focusPoint = React.useRef(new Vector3(0, 0, 0));\n  const defaultUp = React.useRef(new Vector3(0, 0, 0));\n  const tweenCamera = React.useCallback(direction => {\n    animating.current = true;\n    if (defaultControls || onTarget) focusPoint.current = (defaultControls == null ? void 0 : defaultControls.target) || (onTarget == null ? void 0 : onTarget());\n    radius.current = mainCamera.position.distanceTo(target); // Rotate from current camera orientation\n\n    q1.copy(mainCamera.quaternion); // To new current camera orientation\n\n    targetPosition.copy(direction).multiplyScalar(radius.current).add(target);\n    dummy.lookAt(targetPosition);\n    q2.copy(dummy.quaternion);\n    defaultUp.current.copy(mainCamera.up);\n    invalidate();\n  }, [defaultControls, mainCamera, onTarget, invalidate]);\n  React.useEffect(() => {\n    if (scene.background) {\n      //Interchange the actual scene background with the virtual scene\n      backgroundRef.current = scene.background;\n      scene.background = null;\n      virtualScene.background = backgroundRef.current;\n    }\n\n    return () => {\n      // reset on unmount\n      if (backgroundRef.current) scene.background = backgroundRef.current;\n    };\n  }, []);\n  useFrame((_, delta) => {\n    if (virtualCam.current && gizmoRef.current) {\n      var _gizmoRef$current;\n\n      // Animate step\n      if (animating.current) {\n        if (q1.angleTo(q2) < 0.01) {\n          animating.current = false;\n          mainCamera.up.copy(defaultUp.current);\n        } else {\n          const step = delta * turnRate; // animate position by doing a slerp and then scaling the position on the unit sphere\n\n          q1.rotateTowards(q2, step); // animate orientation\n\n          mainCamera.position.set(0, 0, 1).applyQuaternion(q1).multiplyScalar(radius.current).add(focusPoint.current);\n          mainCamera.up.set(0, 1, 0).applyQuaternion(q1).normalize();\n          mainCamera.quaternion.copy(q1);\n          if (onUpdate) onUpdate();else if (defaultControls) defaultControls.update();\n          invalidate();\n        }\n      } // Sync Gizmo with main camera orientation\n\n\n      matrix.copy(mainCamera.matrix).invert();\n      (_gizmoRef$current = gizmoRef.current) == null ? void 0 : _gizmoRef$current.quaternion.setFromRotationMatrix(matrix); // Render virtual camera\n\n      if (autoClear) gl.autoClear = false;\n      gl.clearDepth();\n      gl.render(virtualScene, virtualCam.current);\n    }\n  }, renderPriority);\n  const raycast = useCamera(virtualCam);\n  const gizmoHelperContext = React.useMemo(() => ({\n    tweenCamera,\n    raycast\n  }), [tweenCamera]); // Position gizmo component within scene\n\n  const [marginX, marginY] = margin;\n  const x = alignment.endsWith('-center') ? 0 : alignment.endsWith('-left') ? -size.width / 2 + marginX : size.width / 2 - marginX;\n  const y = alignment.startsWith('center-') ? 0 : alignment.startsWith('top-') ? size.height / 2 - marginY : -size.height / 2 + marginY;\n  return createPortal( /*#__PURE__*/React.createElement(Context.Provider, {\n    value: gizmoHelperContext\n  }, /*#__PURE__*/React.createElement(OrthographicCamera, {\n    ref: virtualCam,\n    position: [0, 0, 200]\n  }), /*#__PURE__*/React.createElement(\"group\", {\n    ref: gizmoRef,\n    position: [x, y, 0]\n  }, GizmoHelperComponent)), virtualScene);\n};\n\nexport { GizmoHelper, useGizmoContext };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}